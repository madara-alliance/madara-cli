name: Task - Validate commands

on:
  workflow_dispatch:
  workflow_call:
  pull_request:

jobs:
  test:
    strategy:
      fail-fast: false
      matrix:
        platform:
          - ubuntu-latest
          # - windows-latest
          - macos-latest
    runs-on: ${{ matrix.platform }}
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: true
      - uses: Swatinem/rust-cache@v2
        with:
          shared-key: "cache"
      - uses: dtolnay/rust-toolchain@master
        with:
          toolchain: 1.81
      - name: Install Docker on macOS
        if: runner.os == 'macOS'
        run: |
          brew install docker
          brew install docker-compose
          brew install colima
          brew install qemu
          mkdir -p ~/.docker/cli-plugins
          ln -sfn $HOMEBREW_PREFIX/opt/docker-compose/bin/docker-compose ~/.docker/cli-plugins/docker-compose
          LIMACTL_PATH=$(brew --prefix)/bin/limactl
          sudo curl -L -o $LIMACTL_PATH https://github.com/mikekazakov/lima-nohvf/raw/master/limactl && sudo chmod +x $LIMACTL_PATH
          colima start --network-address --arch arm64 --vm-type=qemu

      - name: Build cli
        run: cargo build

      - name: Create running check script with timeout
        run: |
          echo '#!/bin/bash
          CONTAINERNAME=$1
          TIMEOUT=$2
          INTERVAL=10
          ELAPSED_TIME=0
          until [ "$(docker inspect -f {{.State.Running}} $CONTAINERNAME)" == "true" ]; do
            if (( $(echo "$ELAPSED_TIME >= $TIMEOUT" | bc -l) )); then
              echo "Timeout reached: Container $CONTAINERNAME did not start within $TIMEOUT seconds."
              exit 1
            fi
            sleep $INTERVAL
            ELAPSED_TIME=$(echo "$ELAPSED_TIME + $INTERVAL" | bc -l)
          done
          echo "Container $CONTAINERNAME is running."
          ' > /tmp/health_check.sh
          chmod +x /tmp/health_check.sh

      - name: Check devnet
        run: |
          cargo run -p madara create devnet &
          /tmp/health_check.sh madara-devnet 120

      - name: Check full-node
        run: |
          cargo run -p madara create full-node --network devnet &
          /tmp/health_check.sh madara-full-node 120

      - name: Check app-chain
        run: |
          cargo run -p madara create app-chain dummy &
          /tmp/health_check.sh madara-app-chain 360

      - name: Check sequencer
        run: |
          cargo run -p madara create sequencer &
          /tmp/health_check.sh madara-sequencer 120
