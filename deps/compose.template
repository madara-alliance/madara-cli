services:
  anvil:
    image: {{ IMAGE_REPOSITORY }}anvil:latest
    container_name: anvil
    cpus: "4.0"
    mem_limit: "16gb"
    ports:
      - "8545:8545"
    command: /bin/bash -c "anvil --host 0.0.0.0 --block-time 1 --code-size-limit 300000"
    attach: false

  mock_verifier_contract:
    image: {{ IMAGE_REPOSITORY }}anvil:latest
    container_name: mock_verifier
    working_dir: /app
    entrypoint: /bin/bash
    volumes:
      - ./anvil/mock_verifier_contract.sh:/app/mock_verifier_contract.sh
    depends_on:
      anvil:
        condition: service_started
    command: -c "sleep 5 && ./mock_verifier_contract.sh"

  bootstrapper_l1:
    image: {{ IMAGE_REPOSITORY }}bootstrapper:latest
    container_name: bootstrapper_l1
    depends_on:
      mock_verifier_contract:
        condition: service_completed_successfully
    volumes:
      - ./bootstrapper/devnet.json:/app/src/configs/devnet.json
    command: -c "sleep 5 && cargo run --release -- --mode setup-l1 --config src/configs/devnet.json"
    attach: false
  
  madara:
    image: {{ IMAGE_REPOSITORY }}madara:latest
    container_name: madara
    cpus: "4.0"
    mem_limit: "16gb"
    ports:
      - "9945:9945"
      - "8080:8080"
    depends_on:
      bootstrapper_l1:
        condition: service_completed_successfully
    volumes:
      - ./data/madara:/usr/share/madara/data
      - ./madara/madara-runner.sh:/usr/local/bin/runner.sh:ro
      - ./madara_config/presets:/usr/local/bin/configs/presets
    entrypoint:
      - /usr/local/bin/runner.sh
    restart: unless-stopped

  bootstrapper_l2:
    image: {{ IMAGE_REPOSITORY }}bootstrapper:latest
    container_name: bootstrapper_l2
    depends_on:
      madara:
        condition: service_started
    volumes:
      - ./bootstrapper/devnet.json:/app/src/configs/devnet.json
{%- if ENABLE_BOOTSTRAPER_L2_SETUP %}
    command: -c "sleep 5 && cargo run --release -- --mode setup-l2 --config src/configs/devnet.json"
{%- else %}
    command: -c "sleep 5 && echo 'Bootstrapper L2 contracts are disabled'"
{%- endif %}
    attach: false

  override_state:
    image: {{ IMAGE_REPOSITORY }}anvil:latest
    container_name: override_state
    working_dir: /app
    entrypoint: /bin/bash
    depends_on:
      bootstrapper_l2:
        condition: service_completed_successfully
    volumes:
      - ./anvil/override_state.js:/app/override_state.js
    command: -c "node override_state.js"

  pathfinder:
    image: {{ IMAGE_REPOSITORY }}pathfinder:latest
    container_name: pathfinder
    cpus: "4.0"
    mem_limit: "16gb"
    ports:
      - "9545:9545"
    depends_on:
      madara:
        condition: service_started
    volumes:
      - ./data/pathfinder:/usr/share/pathfinder/data
      - ./pathfinder/pathfinder-runner.sh:/usr/local/bin/runner.sh:ro
    entrypoint:
      - /usr/local/bin/runner.sh
    restart: unless-stopped
    attach: false

  mongodb:
    image: mongo
    container_name: mongo
    ports:
      - "27017:27017"
    restart: unless-stopped
    depends_on:
      madara:
        condition: service_started
    attach: false

  snos_block_zero_workaround:
    image: mongo
    depends_on:
      bootstrapper_l2:
        condition: service_completed_successfully
    entrypoint: [ "bash", "-c", "mongosh --host mongodb --eval 'load(\"/init.js\")'" ]
    volumes:
      - ./block_zero_workaround.js:/init.js

  localstack:
    image: localstack/localstack@sha256:763947722c6c8d33d5fbf7e8d52b4bddec5be35274a0998fdc6176d733375314
    container_name: localstack
    ports:
      - "4566:4566"
    restart: unless-stopped
    depends_on:
      madara:
        condition: service_started
    attach: false

{%- if ENABLE_DUMMY_PROVER %}
  prover:
    image: gustavomoonsong/mock-prover:latest
    container_name: prover
    ports:
      - "6000:6000"
    depends_on:
      madara:
        condition: service_started
    attach: false
{%- endif %}

  orchestrator:
    image: {{ IMAGE_REPOSITORY }}orchestrator:latest
    container_name: orchestrator
    cpus: "4.0"
    mem_limit: "16gb"
    volumes:
      - ./orchestrator/.env:/usr/local/bin/.env_tmp
      - ./orchestrator/run_orchestrator.sh:/usr/local/bin/run_orchestrator.sh
    entrypoint:
      - /usr/local/bin/run_orchestrator.sh
{%- if ENABLE_BOOTSTRAPER_L2_SETUP %}
    depends_on:
      bootstrapper_l2:
        condition: service_completed_successfully
{%- endif %}
    attach: false
